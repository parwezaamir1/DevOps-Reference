1. What is a container
  
  -- A way to package application with all the necessary dependencies and configurations
  ---Portable artifacts, easily shared and moved around
  ---Makes development and deployment more efficient
  
 Before containers:-
      - configurations on the server needed
      - textual guide of deployment 
      - dependency version conflicts
      - misunderstanding between developer and operations team


 After container
      - Developers and operations work together to package the application in a container
      - No environmental configurations needed on server except Docker runtime

2. Docker image
      - the actual package

              configurations, start script, applications
      - artifact, that can be moved around
           not running

3. Docker container
      - actually start the application
      - container environment is created
      - running


4. Container port VS Host Port

  --Multiple containers can run on your host machine
  -- Your laptop has only certain port available
  -- We cannot bind the running container

  docker container run -d <container-id> -p <host-port>:<container-port>

     - we cannot bind the same host-port with two container port. we will get an error called host port is already in used

5. Debugging Container 