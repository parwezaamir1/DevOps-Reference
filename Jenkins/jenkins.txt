JENKINS---
    --> Java Application
	--> Used for continuous integration and continuous delivery
	
	
Build Automation---
    --> It is the process of automating the process of creation of a software build and the associated processes including: compling the source code
	    into binary code, packaging the binary code, running automated tests and deploying it.
	
Automated Deployment---
    --> Automated Deployment is a process of automating the deployment process in a continuous delivery system
	--> It consist of 4 stages:-
	                          Build > Deploy > Test > Release(deployment on production server)
							  
	
Pipeline:-
     Pipeline is a workflow with group of events or jobs that are chained and integrated with ecah other in sequence
	 
Continuous integration----
           Developers practicing continuous integration merge their changes back to the main branch as often as possible. 
		   The developer's changes are validated by creating a build and running automated tests against the build. 
		   By doing so, you avoid integration challenges that can happen when waiting for release day to merge changes into the release branch.

           Continuous integration puts a great emphasis on testing automation to check that the application is not broken 
		   whenever new commits are integrated into the main branch.
		   
		   build + test = continuous integration

Continuous delivery---
           Continuous delivery is an extension of continuous integration since it automatically deploys all code changes to a testing 
		   and/or production environment after the build stage. 

           This means that on top of automated testing, you have an automated release process and 
		   you can deploy your application any time by clicking a button.
            
		   Continuous integration + acceptence testing = continuous delivery
		   
Continuous deployment---
            Continuous deployment goes one step further than continuous delivery. 
            With this practice, every change that passes all stages of your production pipeline is released to your customers. 
            There's no human intervention, and only a failed test will prevent a new change to be deployed to production.
			
			continuous delivery + deployment on production = continuous deployment
			
Apache tomcat Server Installation:-
    https://www.youtube.com/watch?v=7hw78kJ6rIk
	
	
Jenkinsfile----(pipeline as a code)
         In jenkinsfile, we write scripts or add instructions to implement the pipeline or to run all the stages i,e build > deploy > test > release
		 Jenkinsfile can be written using two types of syntax:- Declerative and Scripted. Both are written in groovy but have a different structure.
		 
		 Declerative:- 
		 
pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }
    }
}
        
	
	
	
###################Install jenkins on Ubuntu ec2 machine #####################
 
 https://www.golinuxcloud.com/install-jenkins-on-ec2-instance/
 
 https://vitux.com/how-to-setup-java_home-path-in-ubuntu/
 
 tomcat installation on ubuntu/
 
 https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-10-on-ubuntu-20-04
 
 
 java-11-openjdk-11.0.18.0.10-1.amzn2.0.1.x86_64
 /usr/lib/jvm/java-11-openjdk-11.0.18.0.10-1.amzn2.0.1.x86_64
 
 