# provider.tf
provider "aws" {
#  access_key = "YOUR_AWS_ACCESS_KEY"
#  secret_access_key = "YOUR_AWS_SECRET_ACCESS_KEY"
  region = "us-east-1" # Update with your desired AWS region
}

# vpc.tf
resource "aws_vpc" "proj_vpc" {
  cidr_block = "10.0.0.0/16"
  tags = {
  Name = "vpc1"
 }
}

# internet_gateway.tf
resource "aws_internet_gateway" "proj_igw" {
  vpc_id = aws_vpc.proj_vpc.id
   tags = {
   Name = "igw1"
 }
}

# route_table.tf
resource "aws_route_table" "proj_rt" {
  vpc_id = aws_vpc.proj_vpc.id
  tags = {
   Name = "rt1"
  }

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.proj_igw.id
  }
}

# subnet.tf
resource "aws_subnet" "proj_public_subnet" {
  vpc_id = aws_vpc.proj_vpc.id
  cidr_block = "10.0.0.0/24"
  availability_zone = "us-east-1a"
  map_public_ip_on_launch = true
  tags = {
   Name = "subnet1-public"
 }
}

resource "aws_subnet" "proj_private_subnet" {
  vpc_id = aws_vpc.proj_vpc.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "us-east-1b"
  tags = {
   Name = "subnet2-private"
 }
}

# security_group.tf
resource "aws_security_group" "proj_public_sg" {
  vpc_id = aws_vpc.proj_vpc.id

  ingress {
    from_port = 22
    to_port = 22
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port = 80
    to_port = 80
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port = 0
    to_port = 0
    protocol = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  
  tags = {
  Name = "public-sg"
  }

}

# ec2_instance.tf
resource "aws_instance" "proj_ec2_instance" {
  ami = "ami-053b0d53c279acc90"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.proj_public_subnet.id
  security_groups = [aws_security_group.proj_public_sg.id]
  tags = {
  Name = "terraform-test-server"
  }

  user_data = <<EOF
#!/bin/bash

echo "Hello, world!"
EOF
}



